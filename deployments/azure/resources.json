{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.23.1.45101",
      "templateHash": "9865267277444874121"
    }
  },
  "parameters": {
    "name": {
      "type": "string",
      "defaultValue": "workspaces",
      "metadata": {
        "description": "name for the resource group and derived network name."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "West US",
      "allowedValues": [
        "West US"
      ],
      "metadata": {
        "description": "..."
      }
    },
    "networkCidr": {
      "type": "array",
      "defaultValue": [
        "10.0.0.0/16"
      ],
      "metadata": {
        "description": "New network CIDR."
      }
    },
    "subnetCidr": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "New subnet CIDR."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2022-09-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.Authorization/roleDefinitions",
      "apiVersion": "2022-04-01",
      "name": "[guid(subscription().id, subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name')))]",
      "properties": {
        "roleName": "[format('Custom Role - Workspaces {0} Regulus Deployment Permissions', parameters('name'))]",
        "description": "Subscription level permissions for workspaces to create regulus deployments in there own resource groups",
        "type": "customRole",
        "permissions": [
          {
            "actions": [
              "Microsoft.Compute/disks/read",
              "Microsoft.Compute/disks/write",
              "Microsoft.Compute/disks/delete",
              "Microsoft.Compute/sshPublicKeys/read",
              "Microsoft.Compute/sshPublicKeys/write",
              "Microsoft.Compute/sshPublicKeys/delete",
              "Microsoft.Compute/virtualMachines/read",
              "Microsoft.Compute/virtualMachines/write",
              "Microsoft.Compute/virtualMachines/delete",
              "Microsoft.KeyVault/vaults/read",
              "Microsoft.KeyVault/vaults/write",
              "Microsoft.KeyVault/vaults/delete",
              "Microsoft.KeyVault/vaults/accessPolicies/write",
              "Microsoft.KeyVault/locations/operationResults/read",
              "Microsoft.KeyVault/locations/deletedVaults/purge/action",
              "Microsoft.ManagedIdentity/userAssignedIdentities/delete",
              "Microsoft.ManagedIdentity/userAssignedIdentities/assign/action",
              "Microsoft.ManagedIdentity/userAssignedIdentities/listAssociatedResources/action",
              "Microsoft.ManagedIdentity/userAssignedIdentities/read",
              "Microsoft.ManagedIdentity/userAssignedIdentities/write",
              "Microsoft.Network/applicationSecurityGroups/read",
              "Microsoft.Network/applicationSecurityGroups/write",
              "Microsoft.Network/applicationSecurityGroups/joinIpConfiguration/action",
              "Microsoft.Network/virtualNetworks/read",
              "Microsoft.Network/virtualNetworks/write",
              "Microsoft.Network/virtualNetworks/delete",
              "Microsoft.Network/virtualNetworks/subnets/read",
              "Microsoft.Network/virtualNetworks/subnets/write",
              "Microsoft.Network/virtualNetworks/subnets/delete",
              "Microsoft.Network/virtualNetworks/subnets/join/action",
              "Microsoft.Network/networkInterfaces/read",
              "Microsoft.Network/networkInterfaces/write",
              "Microsoft.Network/networkInterfaces/delete",
              "Microsoft.Network/networkInterfaces/join/action",
              "Microsoft.Network/networkSecurityGroups/read",
              "Microsoft.Network/networkSecurityGroups/write",
              "Microsoft.Network/networkSecurityGroups/delete",
              "Microsoft.Network/networkSecurityGroups/securityRules/read",
              "Microsoft.Network/networkSecurityGroups/securityRules/write",
              "Microsoft.Network/networkSecurityGroups/securityRules/delete",
              "Microsoft.Network/networkSecurityGroups/join/action",
              "Microsoft.Network/publicIPAddresses/read",
              "Microsoft.Network/publicIPAddresses/write",
              "Microsoft.Network/publicIPAddresses/join/action",
              "Microsoft.Network/publicIPAddresses/delete",
              "Microsoft.Resources/subscriptions/resourcegroups/read",
              "Microsoft.Resources/subscriptions/resourcegroups/write",
              "Microsoft.Resources/subscriptions/resourcegroups/delete"
            ]
          }
        ],
        "assignableScopes": [
          "[subscription().id]"
        ]
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "networkDeployment",
      "resourceGroup": "[parameters('name')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "networkName": {
            "value": "[parameters('name')]"
          },
          "networkCidr": {
            "value": "[parameters('networkCidr')]"
          },
          "subnetCidr": {
            "value": "[parameters('subnetCidr')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.23.1.45101",
              "templateHash": "2636051152564020606"
            }
          },
          "parameters": {
            "networkName": {
              "type": "string"
            },
            "networkCidr": {
              "type": "array"
            },
            "subnetCidr": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-11-01",
              "name": "[parameters('networkName')]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": "[parameters('networkCidr')]"
                }
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks/subnets",
              "apiVersion": "2022-11-01",
              "name": "[format('{0}/{1}', parameters('networkName'), parameters('networkName'))]",
              "properties": {
                "addressPrefix": "[parameters('subnetCidr')]",
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('networkName'))]"
              ]
            }
          ],
          "outputs": {
            "subnetName": {
              "type": "string",
              "value": "[parameters('networkName')]"
            },
            "networkName": {
              "type": "string",
              "value": "[parameters('networkName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name'))]"
      ]
    }
  ],
  "outputs": {
    "RoleDefinitionId": {
      "type": "string",
      "value": "[guid(subscription().id, subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name')))]"
    },
    "NetworkName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('name')), 'Microsoft.Resources/deployments', 'networkDeployment'), '2022-09-01').outputs.networkName.value]"
    },
    "SubnetName": {
      "type": "string",
      "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('name')), 'Microsoft.Resources/deployments', 'networkDeployment'), '2022-09-01').outputs.subnetName.value]"
    }
  }
}